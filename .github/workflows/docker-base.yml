name: Build docker base image

on:
  push:
    # branches: ["main"]
    # paths:
    #   - "src/docker/base/**"
    #   - ".github/workflows/docker-base.yml"
    #   # re-run if something chnages in the bootstrap action (e.g. version of the dependencies)
    #   - ".github/actions/bootstrap/action.yml"
    #   - ".github/workflows/_docker-build.yml"

permissions:
  contents: read

jobs:
  parameters:
    name: Collect build parameters
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    outputs:
      pip-version: ${{ steps.versions.outputs.pip-version }}
      setuptools-version: ${{ steps.versions.outputs.setuptools-version }}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: ./.github/actions/bootstrap
        id: bootstrap

      - id: versions
        run: |
          echo "pip-version=${{ steps.bootstrap.outputs.pip-version }}" >> "$GITHUB_OUTPUT"
          echo "setuptools-version=${{ steps.bootstrap.outputs.setuptools-version }}" >> "$GITHUB_OUTPUT"

  build-base-images:
    name: Build base images
    uses: ./.github/workflows/_docker-build.yml
    needs: parameters
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os:
          - tag: ubuntu22.04
            version: 22.04
            file-dir: src/docker/base/ubuntu
          - tag: alpine3.19
            version: alpine3.19
            file-dir: src/docker/base/alpine
        include:
          - flwr_version: "1.8.0"
    with:
      namespace-repository: flwr/base
      file-dir: ${{ matrix.os.file-dir }}
      build-args: |
        PYTHON_VERSION=${{ matrix.python-version }}
        PIP_VERSION=${{ needs.parameters.outputs.pip-version }}
        SETUPTOOLS_VERSION=${{ needs.parameters.outputs.setuptools-version }}
        OS_VERSION=${{ matrix.os.version }}
        FLWR_VERSION=${{ matrix.flwr_version }}
      tags: test-py${{ matrix.python-version }}-${{ matrix.os.tag }}
    secrets:
      dockerhub-user: ${{ secrets.DOCKERHUB_USERNAME }}
      dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}
